@model ProyectoXalli_Gentella.Models.UnidadDeMedida

@{
    ViewBag.Title = "Catálogo";
    Layout = null;
}

<div class="row">
    <div class="col-md-12 col-sm-12 col-xs-12">
        <div class="x_content">

            @using (Html.BeginForm("Create", "UnidadesDeMedida", FormMethod.Post, new { onsubmit = "return SubmitForm(this)" }))
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })


                <div data-parsley-validate class="form-horizontal form-label-left">
                    <div class="form-inline col-md-12 col-sm-12 col-xs-12">
                        <div class="form-group col-md-6 col-sm-6 col-xs-6">
                            @Html.Label("Código", htmlAttributes: new { @class = "col-md-4 col-sm-4 col-xs-4" })
                            @Html.EditorFor(model => model.CodigoUnidadMedida, new { htmlAttributes = new { @class = "form-control col-md-2 col-sm-2 col-xs-2", @maxlength = 3, @autocomplete = "off" } })
                            @Html.ValidationMessageFor(model => model.CodigoUnidadMedida, "", new { @class = "text-danger col-lg-offset-4" })
                        </div>

                        <div class="form-group col-md-6 col-sm-6 col-xs-6">
                            @Html.Label("Activo", htmlAttributes: new { @class = "col-md-4 col-sm-4 col-xs-4" })
                            @Html.CheckBoxFor(model => model.EstadoUnidadMedida, new { @class = "js-switch col-md-2 col-sm-2 col-xs-2", @disabled = "disabled", @checked = "checked" })
                            @Html.ValidationMessageFor(model => model.EstadoUnidadMedida, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <br /><br /><br />

                    <div class="form-inline col-md-12 col-sm-12 col-xs-12">
                        <div class="form-group col-md-6 col-sm-6 col-xs-6">
                            @Html.Label("U/M", htmlAttributes: new { @class = "col-md-4 col-sm-4 col-xs-4" })
                            @Html.EditorFor(model => model.DescripcionUnidadMedida, new { htmlAttributes = new { @class = "form-control col-md-2 col-sm-2 col-xs-2", @maxlength = 50, @autocomplete = "off" } })
                            @Html.ValidationMessageFor(model => model.DescripcionUnidadMedida, "", new { @class = "text-danger col-lg-offset-4" })
                        </div>

                        <div class="form-group col-md-6 col-sm-6 col-xs-6">
                            @Html.Label("Abbr", htmlAttributes: new { @class = "col-md-4 col-sm-4 col-xs-4" })
                            @Html.EditorFor(model => model.AbreviaturaUM, new { htmlAttributes = new { @class = "form-control col-md-2 col-sm-2 col-xs-2", @maxlength = 50, @autocomplete = "off" } })
                            @Html.ValidationMessageFor(model => model.AbreviaturaUM, "", new { @class = "text-danger" })
                        </div>
                    </div>


                    <br />
                    <br />

                </div>

                <div class="ln_solid"></div>
                <div class="form-group">
                    <div class="col-md-6 col-sm-6 col-xs-12 col-md-offset-4">
                        <a onclick="CerrarModal()" class="btn btn-primary">Cerrar</a>
                        <button type="submit" class="btn btn-success">Guardar</button>
                    </div>
                </div>

            }
        </div>
    </div>
</div>

<script>
    $(document).ready(function () {

        var elem = document.querySelector('.js-switch');
        var init = new Switchery(elem);
    });
</script>
@model ProyectoXalli_Gentella.Models.Producto

@{
    ViewBag.Title = "Edición";
    Layout = null;
}


<div class="row">
    <div class="col-md-12 col-sm-12 col-xs-12">
        <div class="x_content">
            @using (Html.BeginForm("Edit", "Productos", FormMethod.Post, new { onsubmit = "return SubmitForm(this)" }))
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.Id)
                @Html.HiddenFor(model => model.CodigoProducto)

            <div data-parsley-validate class="form-horizontal form-label-left">
                <div class="form-inline col-md-12 col-sm-12 col-xs-12">
                    <div class="form-group col-md-6 col-sm-6 col-xs-6">
                        @Html.Label("Código", htmlAttributes: new { @class = "col-md-4 col-sm-4 col-xs-4" })
                        @Html.EditorFor(model => model.CodigoProducto, new { htmlAttributes = new { @class = "form-control col-md-2 col-sm-2 col-xs-2", @disabled = "disabled" } })
                        @Html.ValidationMessageFor(model => model.CodigoProducto, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group col-md-6 col-sm-6 col-xs-6">
                        @Html.Label("Activo", htmlAttributes: new { @class = "col-md-4 col-sm-4 col-xs-4" })
                        <label>
                            @Html.CheckBoxFor(model => model.EstadoProducto, new { @class = "js-switch col-md-2 col-sm-2 col-xs-2", @onclick = "Check()" })
                            @Html.ValidationMessageFor(model => model.EstadoProducto, "", new { @class = "text-danger" })
                        </label>

                        @*<div class="form-group col-md-6 col-sm-6 col-xs-6">
                        <label class="col-md-6 col-sm-6 col-xs-6">
                            Estado
                            @Html.CheckBoxFor(model => model.EstadoProducto, new { @class = "js-switch col-md-offset-4", @onclick = "Check()" })
                        </label>
                    </div>
                </div>*@
                    </div>
                </div>

                <br /><br /><br />

                <div class="form-inline col-md-12 col-sm-12 col-xs-12">
                    <div class="form-group col-md-6 col-sm-6 col-xs-6">
                        @Html.Label("Producto", htmlAttributes: new { @class = "col-md-4 col-sm-4 col-xs-4" })
                        @Html.EditorFor(model => model.DescripcionProducto, new { htmlAttributes = new { @class = "form-control col-md-2 col-sm-2 col-xs-2", @maxlength = 50, @autocomplete = "off" } })
                        @Html.ValidationMessageFor(model => model.DescripcionProducto, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group col-md-6 col-sm-6 col-xs-6">
                        @Html.Label("Marca", htmlAttributes: new { @class = "col-md-4 col-sm-4 col-xs-4" })
                        @Html.EditorFor(model => model.MarcaProducto, new { htmlAttributes = new { @class = "form-control col-md-2 col-sm-2 col-xs-2", @maxlength = 50, @autocomplete = "off" } })
                        @Html.ValidationMessageFor(model => model.MarcaProducto, "", new { @class = "text-danger" })
                    </div>
                </div>

                <br /><br /><br />

                <div class="form-inline col-md-12 col-sm-12 col-xs-12">

                    <div class="form-group col-md-6 col-sm-6 col-xs-6">
                        @Html.Label("Categoría", htmlAttributes: new { @class = "col-md-4 col-sm-4 col-xs-4" })
                        @Html.DropDownList("CategoriaId", null, htmlAttributes: new { @class = "js-example-placeholder-single js-states form-control", @style = "width: 160px" })
                        @Html.ValidationMessageFor(model => model.CategoriaId, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group col-md-6 col-sm-6 col-xs-6">
                        @Html.Label("U/M", htmlAttributes: new { @class = "col-md-4 col-sm-4 col-xs-4" })
                        @Html.DropDownList("UnidadMedidaId", null, htmlAttributes: new { @class = "js-example-placeholder-single js-states form-control", @style = "width: 160px" })
                        @Html.ValidationMessageFor(model => model.UnidadMedidaId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <br /><br /><br />

                <div class="form-horizontal form-label-left col-md-12 col-sm-12 col-xs-12">

                    <div class="form-group has-feedback col-md-4 col-sm-4 col-xs-4">
                        @Html.Label("Cantidad Producto", htmlAttributes: new { @class = "col-md-12 col-sm-12 col-xs-12" })
                        @Html.EditorFor(model => model.CantidadProducto, new { htmlAttributes = new { @class = "form-control has-feedback-left",
                       @maxlength = 50, @autocomplete = "off", @placeholder = "Cant. Actual", id = "cantProd" } })
                        <span class="fa fa-user form-control-feedback left" aria-hidden="true"></span>
                    </div>

                    <div class="form-group has-feedback col-md-4 col-sm-4 col-xs-4">
                        @Html.Label("Cantidad Mínima", htmlAttributes: new { @class = "col-md-12 col-sm-12 col-xs-12" })
                        @Html.EditorFor(model => model.CantidadMinProducto, new { htmlAttributes = new { @class = "form-control has-feedback-left",
                       @maxlength = 50, @autocomplete = "off", @placeholder = "Cant. Máx.", id = "cantMin" } })
                        <span class="fa fa-user form-control-feedback left" aria-hidden="true"></span>
                    </div>

                    <div class="form-group has-feedback col-md-4 col-sm-4 col-xs-4">
                        @Html.Label("Cantidad Máxima", htmlAttributes: new { @class = "col-md-12 col-sm-12 col-xs-12" })
                        @Html.EditorFor(model => model.CantidadMaxProducto, new { htmlAttributes = new { @class = "form-control has-feedback-left",
                       @maxlength = 50, @autocomplete = "off", @placeholder = "Cant. Mín.", id = "cantMax" } })
                        <span class="fa fa-user form-control-feedback left" aria-hidden="true"></span>
                    </div>

                </div>

                <br />
                <br />
                <br />
                <br />

            </div>

                <div class="ln_solid"></div>
                <div class="form-group">
                    <div class="col-md-6 col-sm-6 col-xs-12 col-md-offset-4">
                        <a onclick="CerrarModal()" class="btn btn-primary">Cerrar</a>
                        <button type="submit" class="btn btn-success">Guardar</button>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<!--LO MANDE A LLAMAR DE NUEVO PORQUE SE PERDIA LA LLAMADA DEL JS-->
<script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>

<script>
    var elem, init;

    //INICIALIZAR EL CHECKBOX
    $(document).ready(function () {

        elem = document.querySelector('.js-switch');
        init = new Switchery(elem, { secondaryColor: '#CE2727' });
    });

    //CONFIRMACION DE ACTIVAR/DESACTIVAR
    function Check() {

        //DEPENDE DE SU ESTADO MANDAMOS UN ALERT
        if (!elem.checked) {

            swal({
                title: "¿Desea desactivar el registro?",
                icon: "warning",
                buttons: {
                    activar: {
                        text: "No",
                        value: "activar" //VALOR PARA UTILIZARLO EN EL SWITCH
                    },
                    desactivar: {
                        text: "Sí",
                        value: "desactivar" //VALOR PARA UTILIZARLO EN EL SWITCH
                    }
                }//FIN DE BUTTONS
            })//FIN DEL SWAL

                .then((value) => {
                    switch (value) {

                        case "activar":
                            //ACTIVAR EL CHKBOX
                            elem.click();
                            break;

                        case "desactivar":
                            //DESACTIVAR EL CHKBOX
                            swal.close();
                            break;

                        default:
                            {
                                swal.close();
                            }
                    }//FIN SWITCH
                });//FIN THEN
        }//FIN IF CHKBOX
    }//FIN FUNCION
</script>